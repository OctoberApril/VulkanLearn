#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

#include "uniform_layout.sh"
#include "global_parameters.sh"
#include "atmosphere/functions.sh"
#include "pbr_functions.sh"

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (set = 3, binding = 0) uniform samplerCube envSkybox;
layout (set = 3, binding = 1, rgba32f) uniform image2DArray envReflection;

const uint numSamples = 16;

layout(push_constant) uniform PushConsts {
	layout (offset = 0) vec4 data[4];
} pushConsts;

void main() 
{
	ivec3 size = imageSize(envReflection);
	vec2 uv = vec2(gl_GlobalInvocationID.xy + 0.5f) / vec2(size.xy);

	vec3 bottomLeft		= pushConsts.data[0].xyz;
	vec3 bottomRight	= pushConsts.data[1].xyz;
	vec3 topLeft		= pushConsts.data[2].xyz;
	vec3 topRight		= pushConsts.data[3].xyz;

	vec3 viewDir = normalize(mix(mix(topLeft, topRight, uv.x), mix(bottomLeft, bottomRight, uv.x), uv.y));

	vec3 N = normalize(viewDir);
	vec3 R = N;
	vec3 V = N;

	float weight = 0;
	vec3 color = vec3(0);

	for (int samples = 0; samples < numSamples; samples++)
	{
		vec2 Xi = Hammersley(samples, numSamples);
		vec3 L = ImportanceSampleGGX(Xi, N, pushConsts.data[1].w);

		float NdotL = dot(N, L);
		if (NdotL > 0)
		{
			color += texture(envSkybox, L).rgb;
			weight += NdotL;
		}
	}

	imageStore(envReflection,	
		ivec3(gl_GlobalInvocationID.xy, pushConsts.data[0].w),	// Hack: Put face id to the w component of the first corner
		vec4(color / weight, 1.0));
}