#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

#include "uniform_layout.sh"
#include "global_parameters.sh"
#include "atmosphere/functions.sh"

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (set = 3, binding = 0, rgba32f) uniform image2DArray envSkybox[2];

layout(push_constant) uniform PushConsts {
	layout (offset = 0) vec4 data[6];
} pushConsts;

void main() 
{
	uint texPingpongIndex = uint(pushConsts.data[3].w);
	ivec3 size = imageSize(envSkybox[texPingpongIndex]);
	vec2 uv = vec2(gl_GlobalInvocationID.xy + 0.5f) / vec2(size.xy);

	uint planetChunkIndex = uint(pushConsts.data[1].w);

	vec3 bottomLeft		= pushConsts.data[0].xyz;
	vec3 bottomRight	= pushConsts.data[1].xyz;
	vec3 topLeft		= pushConsts.data[2].xyz;
	vec3 topRight		= pushConsts.data[3].xyz;

	vec3 viewDir = normalize(mix(mix(topLeft, topRight, uv.x), mix(bottomLeft, bottomRight, uv.x), uv.y));
	vec3 wsCameraPosition = pushConsts.data[4].xyz;
	vec3 wsMainLightDirection = pushConsts.data[5].xyz;

	vec3 skyRadiance;
	vec3 sunRadiance;
    GetSkyAndSunRadiance_WithGround(
		wsCameraPosition, 
		viewDir, 
		wsMainLightDirection, 
		planetChunkIndex, 
		skyRadiance, 
		sunRadiance);

	imageStore(envSkybox[texPingpongIndex],	
		ivec3(gl_GlobalInvocationID.xy, pushConsts.data[0].w),	// Hack: Put face id to the w component of the first corner
		vec4(skyRadiance, 0));
}