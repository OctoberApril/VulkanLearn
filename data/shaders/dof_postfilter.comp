#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

#include "uniform_layout.sh"
#include "global_parameters.sh"

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (set = 3, binding = 0) uniform sampler2D DOFBlurredResult[3];
layout (set = 3, binding = 1, rgba32f) uniform image2D OutputImage[3];

void main() 
{
	ivec2 size = imageSize(OutputImage[frameIndex]);
	vec2 uv = vec2(gl_GlobalInvocationID.xy + 0.5f) / vec2(size);

	vec4 offset = globalData.gameWindowSize.zwzw * vec4(1, 1, -1, 0.0f);
	vec4 c = texture(DOFBlurredResult[frameIndex], uv - offset.xy);
	c += texture(DOFBlurredResult[frameIndex], uv - offset.zy);
	c += texture(DOFBlurredResult[frameIndex], uv + offset.zy);
	c += texture(DOFBlurredResult[frameIndex], uv + offset.xy);

	imageStore(OutputImage[frameIndex],	
		ivec2(gl_GlobalInvocationID.xy), 
		c * 0.25f);
}